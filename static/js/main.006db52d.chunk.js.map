{"version":3,"sources":["components/Header/Header.js","components/SearchInput/SearchInput.js","components/EmojiResults/EmojiResultRow/EmojiResultRow.js","components/EmojiResults/EmojiResults.js","components/filterEmoji/filterEmoji.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","width","height","alt","PureComponent","SearchInput","handleChange","event","props","textChange","onChange","this","EmojiResultsRow","codePointHex","symbol","codePointAt","toString","data-clipboard-text","title","EmojiResults","clipboard","Clipboard","destroy","emojiData","map","filterEmoji","searchText","maxResults","emojiList","filter","emoji","toLowerCase","includes","keywords","slice","App","handleSearchChange","setState","filteredEmoji","target","value","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mvsKAGqBA,G,6KAEjB,OACE,yBAAQC,UAAU,mBAAlB,UACE,qBACEC,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,KALR,eAQE,qBACEH,IAAI,mDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,Y,GAfsBC,kBCEfC,G,kNAKnBC,aAAe,SAAAC,GACb,EAAKC,MAAMC,WAAWF,I,uDAItB,OACE,qBAAKR,UAAU,yBAAf,SACE,8BACE,uBAAOW,SAAUC,KAAKL,uB,GAbSF,kB,gBCDpBQ,G,6KAOjB,IAAMC,EAAeF,KAAKH,MAAMM,OAAOC,YAAY,GAAGC,SAAS,IACzDhB,EAAG,iDAA6Ca,EAA7C,QACT,OACE,sBACEd,UAAU,+CACVkB,sBAAqBN,KAAKH,MAAMM,OAFlC,UAIE,qBAAKX,IAAKQ,KAAKH,MAAMU,MAAOlB,IAAKA,IACjC,sBAAMD,UAAU,QAAhB,SAAyBY,KAAKH,MAAMU,QACpC,sBAAMnB,UAAU,OAAhB,wC,GAhBqCK,kBCGxBe,G,wLAMjBR,KAAKS,UAAY,IAAIC,IAAU,wB,6CAI/BV,KAAKS,UAAUE,Y,+BAIf,OACE,qBAAKvB,UAAU,0BAAf,SACGY,KAAKH,MAAMe,UAAUC,KAAI,SAAAD,GAAS,OACjC,cAAC,EAAD,CAEET,OAAQS,EAAUT,OAClBI,MAAOK,EAAUL,OAFZK,EAAUL,gB,GAlBed,kB,OCL3B,SAASqB,EAAYC,EAAYC,GAC9C,OAAOC,EACJC,QAAO,SAAAC,GACN,QAAIA,EAAMZ,MAAMa,cAAcC,SAASN,EAAWK,kBAG9CD,EAAMG,SAASD,SAASN,MAK7BQ,MAAM,EAAGP,G,UCLOQ,E,kDACnB,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IAMR4B,mBAAqB,SAAA7B,GACnB,EAAK8B,SAAS,CACZC,cAAeb,EAAYlB,EAAMgC,OAAOC,MAAO,OAPjD,EAAKC,MAAQ,CACXH,cAAeb,EAAY,GAAI,KAHhB,E,qDAcjB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAahB,WAAYE,KAAKyB,qBAC9B,cAAC,EAAD,CAAcb,UAAWZ,KAAK8B,MAAMH,uB,GAnBXlC,iBCIlBsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.006db52d.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport default class Header extends PureComponent {\r\n  render() {\r\n    return (\r\n      <header className=\"component-header\">\r\n        <img\r\n          src=\"//cdn.jsdelivr.net/emojione/assets/png/1f638.png\"\r\n          width=\"32\"\r\n          height=\"32\"\r\n          alt=\"\"\r\n        />\r\n        Emoji Search\r\n        <img\r\n          src=\"//cdn.jsdelivr.net/emojione/assets/png/1f63a.png\"\r\n          width=\"32\"\r\n          height=\"32\"\r\n          alt=\"\"\r\n        />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./SearchInput.css\";\r\n\r\nexport default class SearchInput extends PureComponent {\r\n  static propTypes = {\r\n    textChange: PropTypes.func\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.props.textChange(event);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-search-input\">\r\n        <div>\r\n          <input onChange={this.handleChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./EmojiResultRow.css\";\r\n\r\nexport default class EmojiResultsRow extends PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    symbol: PropTypes.string\r\n  };\r\n\r\n  render() {\r\n    const codePointHex = this.props.symbol.codePointAt(0).toString(16);\r\n    const src = `//cdn.jsdelivr.net/emojione/assets/png/${codePointHex}.png`;\r\n    return (\r\n      <div\r\n        className=\"component-emoji-result-row copy-to-clipboard\"\r\n        data-clipboard-text={this.props.symbol}\r\n      >\r\n        <img alt={this.props.title} src={src} />\r\n        <span className=\"title\">{this.props.title}</span>\r\n        <span className=\"info\">Click to copy emoji</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Clipboard from \"clipboard\";\r\n\r\nimport EmojiResultRow from \"./EmojiResultRow/EmojiResultRow\";\r\nimport \"./EmojiResults.css\";\r\n\r\nexport default class EmojiResults extends PureComponent {\r\n  static propTypes = {\r\n    emojiData: PropTypes.array\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.clipboard = new Clipboard(\".copy-to-clipboard\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clipboard.destroy();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-emoji-results\">\r\n        {this.props.emojiData.map(emojiData => (\r\n          <EmojiResultRow\r\n            key={emojiData.title}\r\n            symbol={emojiData.symbol}\r\n            title={emojiData.title}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import emojiList from \"../../data/emojiList.json\";\r\n\r\nexport default function filterEmoji(searchText, maxResults) {\r\n  return emojiList\r\n    .filter(emoji => {\r\n      if (emoji.title.toLowerCase().includes(searchText.toLowerCase())) {\r\n        return true;\r\n      }\r\n      if (emoji.keywords.includes(searchText)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })\r\n    .slice(0, maxResults);\r\n}\r\n","import React, { PureComponent } from \"react\";\nimport Header from './components/Header/Header';\nimport SearchInput from \"./components/SearchInput/SearchInput\";\nimport EmojiResults from \"./components/EmojiResults/EmojiResults\";\nimport filterEmoji from \"./components/filterEmoji/filterEmoji\";\n\nimport './App.css';\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredEmoji: filterEmoji(\"\", 20)\n    };\n  }\n\n  handleSearchChange = event => {\n    this.setState({\n      filteredEmoji: filterEmoji(event.target.value, 20)\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <SearchInput textChange={this.handleSearchChange} />\n        <EmojiResults emojiData={this.state.filteredEmoji} />\n      </div>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}